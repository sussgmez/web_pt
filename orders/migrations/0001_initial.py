# Generated by Django 5.1.5 on 2025-01-17 17:34

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_type', models.CharField(max_length=50, verbose_name='Tipo de cliente')),
            ],
            options={
                'verbose_name': 'customertype',
                'verbose_name_plural': 'customertypes',
            },
        ),
        migrations.CreateModel(
            name='DelayedReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delayed_reason', models.CharField(max_length=50, verbose_name='Motivo demora')),
            ],
            options={
                'verbose_name': 'delayedreason',
                'verbose_name_plural': 'delayedreasons',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('serial', models.CharField(max_length=25, primary_key=True, serialize=False, verbose_name='Serial')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_list', models.CharField(max_length=100, verbose_name='Equipos')),
            ],
            options={
                'verbose_name': 'devicelist',
                'verbose_name_plural': 'devicelists',
            },
        ),
        migrations.CreateModel(
            name='DROP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(verbose_name='Serial')),
                ('total_length', models.IntegerField(verbose_name='Metraje total')),
            ],
            options={
                'verbose_name': 'drop',
                'verbose_name_plural': 'drops',
            },
        ),
        migrations.CreateModel(
            name='InstallationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installaion_category', models.CharField(max_length=50, verbose_name='Categoría de instalación')),
            ],
            options={
                'verbose_name': 'installationcategory',
                'verbose_name_plural': 'installationcategories',
            },
        ),
        migrations.CreateModel(
            name='InstallationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'installationstatus',
                'verbose_name_plural': 'installationstatus',
            },
        ),
        migrations.CreateModel(
            name='InstallationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installaion_type', models.CharField(max_length=50, verbose_name='Tipo de instalación')),
            ],
            options={
                'verbose_name': 'installationtype',
                'verbose_name_plural': 'installationtypes',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(max_length=50, verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'plan',
                'verbose_name_plural': 'plans',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('contract_number', models.IntegerField(primary_key=True, serialize=False, verbose_name='Nro. De Contrato')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre Cliente')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono 1')),
                ('phone_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono 2')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitud')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitud')),
                ('assigned_company', models.CharField(blank=True, max_length=100, null=True, verbose_name='Compañía asignada')),
                ('seller', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vendedor')),
                ('comment', models.TextField(verbose_name='Observaciones')),
                ('date_received', models.DateField(blank=True, null=True, verbose_name='Fecha de recepción')),
                ('customer_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.customertype', verbose_name='Tipo de cliente')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.plan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Mininode',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='orders.device')),
            ],
            options={
                'verbose_name': 'mininode',
                'verbose_name_plural': 'mininodes',
            },
            bases=('orders.device',),
        ),
        migrations.CreateModel(
            name='ONU',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='orders.device')),
            ],
            options={
                'verbose_name': 'onu',
                'verbose_name_plural': 'onus',
            },
            bases=('orders.device',),
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='orders.device')),
            ],
            options={
                'verbose_name': 'router',
                'verbose_name_plural': 'routers',
            },
            bases=('orders.device',),
        ),
        migrations.CreateModel(
            name='HistoricalCustomer',
            fields=[
                ('contract_number', models.IntegerField(db_index=True, verbose_name='Nro. De Contrato')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre Cliente')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono 1')),
                ('phone_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono 2')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitud')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitud')),
                ('assigned_company', models.CharField(blank=True, max_length=100, null=True, verbose_name='Compañía asignada')),
                ('seller', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vendedor')),
                ('comment', models.TextField(verbose_name='Observaciones')),
                ('date_received', models.DateField(blank=True, null=True, verbose_name='Fecha de recepción')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.customertype', verbose_name='Tipo de cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.plan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'historical customer',
                'verbose_name_plural': 'historical customers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.IntegerField(verbose_name='Nro. De Cédula')),
                ('phone_1', models.CharField(max_length=20, verbose_name='Teléfono 1')),
                ('phone_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono 2')),
                ('address', models.CharField(max_length=200, verbose_name='Dirección')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'technician',
                'verbose_name_plural': 'technicians',
            },
        ),
        migrations.CreateModel(
            name='KardexTensioners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Cantidad')),
                ('output', models.BooleanField(verbose_name='Salida')),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.technician', verbose_name='Técnico')),
            ],
            options={
                'verbose_name': 'kardextensioners',
                'verbose_name_plural': 'kardextensioners',
            },
        ),
        migrations.CreateModel(
            name='KardexDROP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.IntegerField(verbose_name='Metraje')),
                ('output', models.BooleanField(verbose_name='Salida')),
                ('drop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.drop', verbose_name='Drop')),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.technician', verbose_name='Técnico')),
            ],
            options={
                'verbose_name': 'kardexdrop',
                'verbose_name_plural': 'kardexdrops',
            },
        ),
        migrations.AddField(
            model_name='device',
            name='technician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.technician', verbose_name='Técnico'),
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Hora')),
                ('other_reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Otro')),
                ('zone', models.IntegerField(blank=True, null=True, verbose_name='Zona')),
                ('olt', models.IntegerField(blank=True, null=True, verbose_name='OLT')),
                ('card', models.IntegerField(blank=True, null=True, verbose_name='Tarjeta')),
                ('pon', models.IntegerField(blank=True, null=True, verbose_name='PON')),
                ('box', models.IntegerField(blank=True, null=True, verbose_name='Caja')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='Puerto')),
                ('box_power', models.FloatField(blank=True, null=True, verbose_name='Potencia caja')),
                ('house_power', models.FloatField(blank=True, null=True, verbose_name='Potencia casa')),
                ('drop_length', models.IntegerField(verbose_name='Metraje DROP')),
                ('num_tensioners', models.IntegerField(verbose_name='Cantidad de tensores')),
                ('num_connectors', models.IntegerField(verbose_name='Cantidad de conectores')),
                ('customer_confirm', models.BooleanField(blank=True, null=True, verbose_name='Confirmación del cliente')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.customer', verbose_name='Cliente')),
                ('delayed_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.delayedreason', verbose_name='Motivo demora')),
                ('device_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.devicelist', verbose_name='Equipos')),
                ('drop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.drop', verbose_name='Serial DROP')),
                ('installation_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.installationcategory', verbose_name='Categoría de instalación')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.installationstatus', verbose_name='Status')),
                ('installation_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.installationtype', verbose_name='Tipo de instalación')),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.technician', verbose_name='Técnico')),
                ('mininode', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.mininode', verbose_name='Mininodo')),
                ('onu', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.onu', verbose_name='ONU')),
                ('router', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.router', verbose_name='Router')),
            ],
            options={
                'verbose_name': 'installation',
                'verbose_name_plural': 'installations',
            },
        ),
        migrations.CreateModel(
            name='HistoricalInstallation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Hora')),
                ('other_reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Otro')),
                ('zone', models.IntegerField(blank=True, null=True, verbose_name='Zona')),
                ('olt', models.IntegerField(blank=True, null=True, verbose_name='OLT')),
                ('card', models.IntegerField(blank=True, null=True, verbose_name='Tarjeta')),
                ('pon', models.IntegerField(blank=True, null=True, verbose_name='PON')),
                ('box', models.IntegerField(blank=True, null=True, verbose_name='Caja')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='Puerto')),
                ('box_power', models.FloatField(blank=True, null=True, verbose_name='Potencia caja')),
                ('house_power', models.FloatField(blank=True, null=True, verbose_name='Potencia casa')),
                ('drop_length', models.IntegerField(verbose_name='Metraje DROP')),
                ('num_tensioners', models.IntegerField(verbose_name='Cantidad de tensores')),
                ('num_connectors', models.IntegerField(verbose_name='Cantidad de conectores')),
                ('customer_confirm', models.BooleanField(blank=True, null=True, verbose_name='Confirmación del cliente')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.customer', verbose_name='Cliente')),
                ('delayed_reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.delayedreason', verbose_name='Motivo demora')),
                ('device_list', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.devicelist', verbose_name='Equipos')),
                ('drop', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.drop', verbose_name='Serial DROP')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('installation_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.installationcategory', verbose_name='Categoría de instalación')),
                ('status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.installationstatus', verbose_name='Status')),
                ('installation_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.installationtype', verbose_name='Tipo de instalación')),
                ('technician', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.technician', verbose_name='Técnico')),
                ('mininode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.mininode', verbose_name='Mininodo')),
                ('onu', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.onu', verbose_name='ONU')),
                ('router', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.router', verbose_name='Router')),
            ],
            options={
                'verbose_name': 'historical installation',
                'verbose_name_plural': 'historical installations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
